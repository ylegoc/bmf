<!DOCTYPE html>
<html>

<head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.js"></script>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet/v0.7.7/leaflet.css" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <style>
        html,
        body {
            height: 100%;
            padding: 0;
            margin: 0;
        }

        #map {
            width: 70%;
            height: 100%;
            left: 30%;
        }

        #results {
            width: 30%;
            border: 3px;
            position: absolute;
            right: 5px;
            top: 5px;
            bottom: 5px;
            left: 0%;
            margin-left: 25px;
        }

        .rowSelected {
            background-color:#b6dcfd;
        }

    </style>
</head>

<body>
    <div id="map"></div>

    <script>
        let startLat;
        let startLng;
        let endLat;
        let endLng;

        function drawLine(startLat, startLng, endLat, endLng, color) {
            polyline = L.polyline([[startLat, startLng], [endLat, endLng]], { color });
            polyline.addTo(map);

            return polyline;
        }

        // Initialize Leaflet .
        let map = L.map('map').setView({ lon: 5.7517, lat: 45.1846 }, 13);

        // Add the OpenStreetMap tiles.
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="https://openstreetmap.org/copyright">OpenStreetMap contributors</a>'
        }).addTo(map);

        // Show the scale bar on the lower left corner.
        L.control.scale().addTo(map);

        // Draw the trajectory searched.
        startLat = Number('<%= startLat %>');
        startLng = Number('<%= startLng %>');
        endLat = Number('<%= endLat %>');
        endLng = Number('<%= endLng %>');
        drawLine(startLat, startLng, endLat, endLng, 'red');

        // The mentor trajectories.
        let trajectories = {};
        let mentorIds = {};
        let selectedMentorId = '';
    </script>

    <div id="results">
        <h4>Mentors les plus proches</h4>
        
        <br/>
        
        <table id="mentors" class="table w-75">
            <thead>
                <tr>
                    <th>Mentor</th>
                    <th>Distance</th>
                </tr>
            </thead>
            <tbody>
                <% for(let i = 0; i < result.length; i++) { %>
                <tr id='row-<%= i %>'>
                    <td><%= result[i].pseudo %></td>
                    <td><%= result[i].score.toFixed(2) %></td>
                    <script>
                        // We could instead iterate on the table dynamically with hidden fields.
                        startLat = Number('<%= result[i].start[1] %>');
                        startLng = Number('<%= result[i].start[0] %>');
                        endLat = Number('<%= result[i].end[1] %>');
                        endLng = Number('<%= result[i].end[0] %>');
                        trajectories['row-<%= i %>'] = drawLine(startLat, startLng, endLat, endLng, 'grey');
                        mentorIds['row-<%= i %>'] = '<%= result[i]._id["$oid"] %>';
                    </script>
                </tr>
                <% } %>

            </tbody>
        </table>

        <script>
            // Table callback.
            function onRowClick(tableId, callback) {
                let table = document.getElementById(tableId),
                    rows = table.getElementsByTagName("tr"),
                    i;
                // The first row is the header.
                for (i = 1; i < rows.length; i++) {
                    table.rows[i].onclick = function (row) {
                        return function () {
                            callback(row);
                        };
                    }(table.rows[i]);
                }
            };
            
            onRowClick("mentors", function (row) {

                let table = document.getElementById("mentors"),
                    rows = table.getElementsByTagName("tr"),
                    i;

                // The first row is the header.
                for (i = 1; i < rows.length; i++) {
                    rows[i].classList.remove('rowSelected');
                    let rid = ('row-'+(i - 1));
                    trajectories[rid].setStyle({ color: 'grey'});
                }

                row.className += " rowSelected";
                trajectories[row.id].setStyle({ color: '#0088ff'});
                selectedMentorId = mentorIds[row.id];

                let mentorId = document.getElementById('mentorId');
                mentorId.value = selectedMentorId;
            });

        </script>

        <br/>
        <br/>

        <form action="/contact_mentor" method="post">

            <input type="hidden" id="mentorId" name="mentorId" value="" />

            <button type="submit" class="btn btn-lg btn-block btn-outline-primary align-self-end w-75">Contacter le Mentor</button>
        </form>

        <br/>
        <br/>

        <form action="/find_mentor" method="get">
            <button type="submit" class="btn btn-lg btn-block btn-outline-primary align-self-end w-75">Trouver un Mentor</button>
        </form>

        <br/>
        <br/>

        <form action="/" method="get">
            <button type="submit" class="btn btn-lg btn-block btn-outline-primary align-self-end w-75">Retour Ã  l'accueil</button>
        </form>
    </div>
</body>

</html>